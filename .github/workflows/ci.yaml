name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  GO_VERSION: '1.24.4'
  GOLANGCI_LINT_VERSION: v2.1


jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT

  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}
#  golangci:
#    name: Lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v5
#        with:
#          go-version: '1.24.4'
#
#      - name: Lint weather-upd-subscription-srv
#        uses: golangci/golangci-lint-action@v8
#        with:
#          version: v2.1
#          working-directory: ./weather-upd-subscription-srv
#
#      - name: Lint notification-srv
#        uses: golangci/golangci-lint-action@v8
#        with:
#          version: v2.1
#          working-directory: ./notification-srv


  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests (weather-upd-subscription-srv)
        run: go test -v ./weather-upd-subscription-srv/...

      - name: Run integration tests (weather-upd-subscription-srv)
        run: go test -v --tags=integration ./weather-upd-subscription-srv/...

      - name: Run unit tests (notification-srv)
        run: go test -v ./notification-srv/...

      - name: Run integration tests (notification-srv)
        run: go test -v --tags=integration ./notification-srv/...