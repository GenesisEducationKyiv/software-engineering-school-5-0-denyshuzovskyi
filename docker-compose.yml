services:
  postgresql:
    image: postgres:17-alpine
    container_name: nimbus-notify-postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - nimbus-notify-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: nimbus-notify-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - nimbus-notify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  weather-upd-subscription-srv:
    image: weather-upd-subscription-srv:latest
    container_name: weather-upd-subscription-srv
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - nimbus-notify-network
    environment:
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_URL: ${DATABASE_URL}
      WEATHER_PROVIDER_URL: ${WEATHER_PROVIDER_URL}
      WEATHER_PROVIDER_KEY: ${WEATHER_PROVIDER_KEY}
      REDIS_URL: ${REDIS_URL}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL}

  notification-srv:
    image: notification-srv:latest
    container_name: notification-srv
    ports:
      - "50051:50051"
    networks:
      - nimbus-notify-network
    environment:
      GRPC_SERVER_HOST: ${GRPC_SERVER_HOST}
      GRPC_SERVER_PORT: ${GRPC_SERVER_PORT}
      EMAIL_SERVICE_DOMAIN: ${EMAIL_SERVICE_DOMAIN}
      EMAIL_SERVICE_KEY: ${EMAIL_SERVICE_KEY}


networks:
  nimbus-notify-network:
    driver: bridge
